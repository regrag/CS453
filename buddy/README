Author: Chad Weigle
Date: 12/19/13
Buddy System

build: make

Summary: This is the Buddy System. Inside the libsrc folder you will find the files used to create the libraries
for buddy. I was unable to get buddy fully functional becuase of a seg fault in my block splitting
method. Thus some tests are not linking to the library correctly. In order to test my buddy system, I wrote some unit tests in the buddy.c file's main method. Thus go into libsrc and type "make test". A testbuddy file will be created. Run this using "./testbuddy" and see the output of the tests. My code is mostly complete but also untested because I have an error so early on in my methods. I hope that because I gave a valiant effort I can still achieve a passing grade.

Documentation: Doxygen comments have been placed in most of the files for any methods that needed them. Also, this README.

--mydash README --
Inside src

Usage: ./run.sh

Test: ./mydashTest.sh : while in the program

mydash is a shell program written in C that uses a doubly linked list structure to keep track of jobs. The program runs most normal commands that a bash shell has like ls, cd, ps, etc. Also, there is a custom command, jobs, that will print all of the jobs that have been running in the background or have completed.

The design for this program was to write up the entire program in a single file and then break it up. Normally this design is poor to use, but I did not see the design section of the requirements until I was already partly through the project. When the shell was mostly completed, I then found sections that had common functionality and I broke those into functions and put them in a separate file. This proved to be quite difficult and made things hard to read. If only Software Engineering was earlier in the program!

--UPDATED SECTION of mydash--

Now that I have received a poor grade for mydash, I am fixing my many mistakes for the buddy project. I have noticed that the "put it all in one file" method has really kicked me in the rear because coming back to a project I haven't touched in a few months and having to fix bugs has been a hasle. To fix my mistakes, I had to do do the following:
-Update this README
-Create a test script. It is very basic because when running commands through a script, it will not print out the output from the program to the shell. Thus it is difficult to display useful results through a script.
-Include a version command
-fix the jobs command
-fix the job workflow so simple job control was completed
-a couple of other little things

In addition to my above comments, I would add one more. That is, I have grown greatly in my experience in both programming and Software Engineering in the last few months. I currently work at a Software Company and it has helped me develope critical thinking skills that I now find very useful and applicable to this school project.
